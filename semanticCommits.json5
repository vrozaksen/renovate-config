{
  $schema: "https://docs.renovatebot.com/renovate-schema.json",
  description: "Semantic commit message formatting for dependency updates",
  packageRules: [
    {
      description: "Major update commit format",
      matchUpdateTypes: ["major"],
      semanticCommitType: "feat",
      commitMessagePrefix: "{{semanticCommitType}}({{semanticCommitScope}})!:",
      commitMessageExtra: "({{currentVersion}} → {{newVersion}})",
    },
    {
      description: "Minor update commit format",
      matchUpdateTypes: ["minor"],
      semanticCommitType: "feat",
      commitMessageExtra: "({{currentVersion}} → {{newVersion}})",
    },
    {
      description: "Patch update commit format",
      matchUpdateTypes: ["patch"],
      semanticCommitType: "fix",
      commitMessageExtra: "({{currentVersion}} → {{newVersion}})",
    },
    {
      description: "Digest update commit format",
      matchUpdateTypes: ["digest"],
      semanticCommitType: "chore",
      commitMessageExtra: "({{currentDigestShort}} → {{newDigestShort}})",
    },
    {
      description: "Docker/container scoped commits",
      matchDatasources: ["docker"],
      semanticCommitScope: "container",
      commitMessageTopic: "image {{depName}}",
    },
    {
      description: "Helm chart scoped commits",
      matchDatasources: ["helm"],
      semanticCommitScope: "helm",
      commitMessageTopic: "chart {{depName}}",
    },
    {
      description: "Ansible/Galaxy scoped commits",
      matchDatasources: ["galaxy", "galaxy-collection"],
      semanticCommitScope: "ansible",
      commitMessageTopic: "ansible {{depName}}",
    },
    {
      description: "Terraform provider scoped commits",
      matchDatasources: ["terraform-provider"],
      semanticCommitScope: "terraform",
      commitMessageTopic: "provider {{depName}}",
    },
    {
      description: "GitHub Actions scoped commits",
      matchManagers: ["github-actions"],
      semanticCommitType: "ci",
      semanticCommitScope: "github-action",
      commitMessageTopic: "action {{depName}}",
    },
    {
      description: "GitHub releases scoped commits",
      matchDatasources: ["github-releases"],
      semanticCommitScope: "github-release",
      commitMessageTopic: "release {{depName}}",
    },
    {
      description: "GitHub tags scoped commits",
      matchDatasources: ["github-tags"],
      semanticCommitScope: "github-tag",
      commitMessageTopic: "tag {{depName}}",
    },
    {
      description: "Python/pip scoped commits",
      matchDatasources: ["pypi"],
      semanticCommitScope: "pip",
      commitMessageTopic: "package {{depName}}",
    },
    {
      description: "npm/Node.js scoped commits",
      matchDatasources: ["npm"],
      semanticCommitScope: "npm",
      commitMessageTopic: "package {{depName}}",
    },
    {
      description: "Go module scoped commits",
      matchManagers: ["gomod"],
      semanticCommitScope: "go",
      commitMessageTopic: "module {{depName}}",
    },
    {
      description: "Rust/Cargo scoped commits",
      matchManagers: ["cargo"],
      semanticCommitScope: "rust",
      commitMessageTopic: "crate {{depName}}",
    },
    {
      description: "Pre-commit hook scoped commits",
      matchManagers: ["pre-commit"],
      semanticCommitScope: "pre-commit",
      commitMessageTopic: "hook {{depName}}",
    },
    {
      description: "Mise tool scoped commits",
      matchManagers: ["mise"],
      semanticCommitScope: "mise",
      commitMessageTopic: "tool {{depName}}",
    },
  ],
}
